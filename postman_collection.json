{
	"info": {
		"_postman_id": "93186fef-0281-4e87-af92-df301f94045b",
		"name": "Splitwise-like API",
		"description": "A collection for testing the Splitwise-like API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30579633"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Authenticate with email and password"
					},
					"response": []
				},
				{
					"name": "Get Authorization Code",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorize?client_id=client123&redirect_uri=http://localhost:3000/callback&state=xyz123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "client123"
								},
								{
									"key": "redirect_uri",
									"value": "http://localhost:3000/callback"
								},
								{
									"key": "state",
									"value": "xyz123"
								}
							]
						},
						"description": "Get an authorization code (requires user to be authenticated)"
					},
					"response": []
				},
				{
					"name": "Exchange Code for Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"grant_type\": \"authorization_code\",\n  \"client_id\": \"client123\",\n  \"code\": \"auth_code_here\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"token"
							]
						},
						"description": "Exchange an authorization code for access and ID tokens"
					},
					"response": []
				},
				{
					"name": "OAuth2 Success",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/oauth2/success",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"oauth2",
								"success"
							]
						},
						"description": "Handle successful OAuth2 login (this is usually called by the OAuth provider)"
					},
					"response": []
				},
				{
					"name": "JWKS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/jwks.json",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"jwks.json"
							]
						},
						"description": "Get the JSON Web Key Set"
					},
					"response": []
				},
				{
					"name": "OpenID Configuration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/.well-known/openid-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								".well-known",
								"openid-configuration"
							]
						},
						"description": "Get the OpenID Connect configuration"
					},
					"response": []
				}
			],
			"description": "Endpoints for authentication and authorization"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"newuser@example.com\",\n  \"name\": \"New User\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Get Private Route",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							]
						},
						"description": "Access a private route (requires USER role and users:read-financial scope)"
					},
					"response": []
				},
				{
					"name": "Find User by Email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/email/user@example.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"email",
								"user@example.com"
							]
						},
						"description": "Find a user by email (requires authentication and either matching email or ADMIN role)"
					},
					"response": []
				},
				{
					"name": "Get User Roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/users/debug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"debug"
							]
						},
						"description": "Get roles and email from the authentication token"
					},
					"response": []
				}
			],
			"description": "Endpoints for user management"
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Create Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Group Zuera\",\n  \"userIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Create a new group"
					},
					"response": []
				},
				{
					"name": "Get Group by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6"
							]
						},
						"description": "Get a group by ID"
					},
					"response": []
				},
				{
					"name": "Get All Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							]
						},
						"description": "Get all groups"
					},
					"response": []
				},
				{
					"name": "Update Group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Group Zuera Never Ends\",\n  \"userIds\": [1, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6"
							]
						},
						"description": "Update a group"
					},
					"response": []
				},
				{
					"name": "Delete Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"5"
							]
						},
						"description": "Delete a group"
					},
					"response": []
				},
				{
					"name": "Add Member to Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/6/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6",
								"members"
							]
						},
						"description": "Add a member to a group"
					},
					"response": []
				},
				{
					"name": "Remove Member from Group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 5\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/6/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6",
								"members"
							]
						},
						"description": "Remove a member from a group"
					},
					"response": []
				},
				{
					"name": "Add Expense to Group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 70.00,\n  \"description\": \"Lunch\",\n  \"groupId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/groups/6/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6",
								"expenses"
							]
						},
						"description": "Add an expense to a group"
					},
					"response": []
				},
				{
					"name": "View Group Expenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/groups/6/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"6",
								"expenses"
							]
						},
						"description": "View expenses for a group"
					},
					"response": []
				}
			],
			"description": "Endpoints for group management"
		},
		{
			"name": "Expenses",
			"item": [
				{
					"name": "Get Expense by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/expenses/14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"expenses",
								"14"
							]
						},
						"description": "Get an expense by ID"
					},
					"response": []
				},
				{
					"name": "Get All Expenses",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/expenses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"expenses"
							]
						},
						"description": "Get all expenses"
					},
					"response": []
				},
				{
					"name": "Update Expense",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"amount\": 75.00,\n  \"description\": \"Updated Lunch\",\n  \"groupId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/expenses/14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"expenses",
								"14"
							]
						},
						"description": "Update an expense"
					},
					"response": []
				},
				{
					"name": "Delete Expense",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/expenses/14",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"expenses",
								"14"
							]
						},
						"description": "Delete an expense"
					},
					"response": []
				},
				{
					"name": "Calculate Expense Shares",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/expenses/1/shares",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"expenses",
								"1",
								"shares"
							]
						},
						"description": "Calculate shares for an expense"
					},
					"response": []
				}
			],
			"description": "Endpoints for expense management"
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		}
	]
}